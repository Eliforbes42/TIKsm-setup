tests:

  # container_status.tick triggers no warning alert when the measurement 
  # container_status in the dbrp telegraf:autogen is running
  - name: "Alert Container Status:: No warning when running"  
    task_name: container_status_tester.tick
    db: telegraf
    rp: autogen
    type: stream
    data:
      - docker_container_status container_name=somename time=1542658000000000000 container_status=running
      - docker_container_status container_name=somename time=1542658730000000000 container_status=running
    expects:
      ok: 0
      warn: 0
      crit: 0

  # container_status.tick triggers a warning alert when the measurement 
  # container_status in the dbrp telegraf:autogen is not running
  - name: "Alert Container Status:: Warning when not running"  
    task_name: container_status_tester.tick
    db: telegraf
    rp: autogen
    type: stream
    data:
      - docker_container_status container_status="running"
      - docker_container_status container_status="error"
    expects:
      ok: 0
      warn: 1
      crit: 0

      
#pod tests      
  - name: "Alert Slack:: pod alert test"  
    task_name: failed_pod_alert_tester.tick
    db: telegraf
    rp: autogen
    type: stream
    data:
      - kube_pod_status_phase,phase=Failed gauge=1 
      - kube_pod_status_phase,phase=Failed gauge=1 
    expects:
      ok: 0
      warn: 1
      crit: 0


#slack test
  - name: "Alert Slack:: Usage critical when idle < 100%, lol"
    task_name: slack_test_tester.tick
    db: telegraf
    rp: autogen
    type: stream
    data:
    - cpu usage_idle=10
    - cpu usage_idle=10
    - cpu usage_idle=10
    expects:
      ok: 0
      warn: 3
      crit: 0

#Container Termination Reason Tests
  - name: "Alert Container Termination:: Warning when container terminates"  
    task_name: container_termination_reason_tester.tick
    db: telegraf
    rp: autogen
    type: stream
    data:
      - kube_pod_container_status_terminated_reason reason="Completed"
      - kube_pod_container_status_terminated_reason reason="failure"
    expects:
      ok: 0
      warn: 1
      crit: 0

  - name: "Alert Container Termination:: No warning on ok data"  
    task_name: container_termination_reason_tester.tick
    db: telegraf
    rp: autogen
    type: stream
    data:
      - kube_pod_container_status_terminated_reason reason="Completed"
      - kube_pod_container_status_terminated_reason reason="Completed"
    expects:
      ok: 0
      warn: 0
      crit: 0

#number of containers stopped tests
  - name: "Num Containers Stopped:: showing 3 stopped containers"  
    task_name: num_containers_stopped_tester.tick
    db: telegraf
    rp: autogen
    type: stream
    data:
      - docker n_containers_stopped=2
      - docker n_containers_stopped=3
    expects:
      ok: 0
      warn: 1
      crit: 0

  - name: "Num Containers Stopped:: no alert on zero stopped containers"  
    task_name: num_containers_stopped_tester.tick
    db: telegraf
    rp: autogen
    type: stream
    data:
      - docker n_containers_stopped=0
      - docker n_containers_stopped=0
    expects:
      ok: 0
      warn: 0
      crit: 0

#spid blocking alert tests
  - name: "Spid Blocking Alert:: warning when blocking is recorded"  
    task_name: spid_blocking_alert_tester.tick
    db: telegraf
    rp: autogen
    type: stream
    data:
      - processes blocked=0
      - processes blocked=6
      
    expects:
      ok: 0
      warn: 1
      crit: 0

  - name: "Spid Blocking Alert:: no warning when there is no blocking"  
    task_name: spid_blocking_alert_tester.tick
    db: telegraf
    rp: autogen
    type: stream
    data:
      - processes blocked=0
      - processes blocked=0
      
    expects:
      ok: 0
      warn: 0
      crit: 0